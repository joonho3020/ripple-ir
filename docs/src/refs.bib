@techreport{rocket,
    Author = {Asanović, Krste and Avizienis, Rimas and Bachrach, Jonathan and Beamer, Scott and Biancolin, David and Celio, Christopher and Cook, Henry and Dabbelt, Daniel and Hauser, John and Izraelevitz, Adam and Karandikar, Sagar and Keller, Ben and Kim, Donggyu and Koenig, John and Lee, Yunsup and Love, Eric and Maas, Martin and Magyar, Albert and Mao, Howard and Moreto, Miquel and Ou, Albert and Patterson, David A. and Richards, Brian and Schmidt, Colin and Twigg, Stephen and Vo, Huy and Waterman, Andrew},
    Title = {The Rocket Chip Generator},
    Institution = {EECS Department, University of California, Berkeley},
    Year = {2016},
    Month = {Apr},
    URL = {http://www2.eecs.berkeley.edu/Pubs/TechRpts/2016/EECS-2016-17.html},
    Number = {UCB/EECS-2016-17},
    Abstract = {Rocket Chip is an open-source Sysem-on-Chip design generator that emits synthesizable RTL. It leverages the Chisel hardware construction language to compose a library of sophisticated generators for cores, caches, and interconnects into an integrated SoC. Rocket Chip generates general-purpose processor cores that use the open RISC-V ISA, and provides both an in-order core generator (Rocket) and an out-of-order core generator (BOOM). For SoC designers interested in utilizing heterogeneous specialization for added efficiency gains, Rocket Chip supports the integration of custom accelerators in the form of instruction set extensions, coprocessors, or fully independent novel cores. Rocket Chip has been taped out (manufactured) eleven times, and yielded functional silicon prototypes capable of booting Linux.}
}

@ARTICLE{chipyard,
  author={Amid, Alon and Biancolin, David and Gonzalez, Abraham and Grubb, Daniel and Karandikar, Sagar and Liew, Harrison and Magyar, Albert and Mao, Howard and Ou, Albert and Pemberton, Nathan and Rigge, Paul and Schmidt, Colin and Wright, John and Zhao, Jerry and Shao, Yakun Sophia and Asanović, Krste and Nikolić, Borivoje},
  journal={IEEE Micro}, 
  title={Chipyard: Integrated Design, Simulation, and Implementation Framework for Custom SoCs}, 
  year={2020},
  volume={40},
  number={4},
  pages={10-21},
  doi={10.1109/MM.2020.2996616}}

@INPROCEEDINGS{firesim,
  author={Karandikar, Sagar and Mao, Howard and Kim, Donggyu and Biancolin, David and Amid, Alon and Lee, Dayeol and Pemberton, Nathan and Amaro, Emmanuel and Schmidt, Colin and Chopra, Aditya and Huang, Qijing and Kovacs, Kyle and Nikolic, Borivoje and Katz, Randy and Bachrach, Jonathan and Asanovic, Krste},
  booktitle={2018 ACM/IEEE 45th Annual International Symposium on Computer Architecture (ISCA)}, 
  title={FireSim: FPGA-Accelerated Cycle-Exact Scale-Out System Simulation in the Public Cloud}, 
  year={2018},
  volume={},
  number={},
  pages={29-42},
  doi={10.1109/ISCA.2018.00014}}

@INPROCEEDINGS{chisel,
  author={Bachrach, Jonathan and Vo, Huy and Richards, Brian and Lee, Yunsup and Waterman, Andrew and Avižienis, Rimas and Wawrzynek, John and Asanović, Krste},
  booktitle={DAC Design Automation Conference 2012},
  title={Chisel: Constructing hardware in a Scala embedded language},
  year={2012},  volume={},  number={},  pages={1212-1221},  doi={10.1145/2228360.2228584}}

@INPROCEEDINGS{firrtl, 
  author={A. Izraelevitz and J. Koenig and P. Li and R. Lin and A. Wang and A. Magyar and D. Kim and C. Schmidt and C. Markley and J. Lawson and J. Bachrach}, 
  booktitle={2017 IEEE/ACM International Conference on Computer-Aided Design (ICCAD)}, 
  title={Reusability is FIRRTL ground: Hardware construction languages, compiler frameworks, and transformations}, 
  year={2017}, 
  volume={}, 
  number={}, 
  pages={209-216}, 
  keywords={field programmable gate arrays;hardware description languages;program compilers;software reusability;hardware development practices;hardware libraries;open-source hardware intermediate representation;hardware compiler transformations;Hardware construction languages;retargetable compilers;software development;virtual Cambrian explosion;hardware compiler frameworks;parameterized libraries;FIRRTL;FPGA mappings;Chisel;Flexible Intermediate Representation for RTL;Reusability;Hardware;Libraries;Hardware design languages;Field programmable gate arrays;Tools;Open source software;RTL;Design;FPGA;ASIC;Hardware;Modeling;Reusability;Hardware Design Language;Hardware Construction Language;Intermediate Representation;Compiler;Transformations;Chisel;FIRRTL}, 
  doi={10.1109/ICCAD.2017.8203780}, 
  ISSN={1558-2434}, 
  month={Nov},}


@INPROCEEDINGS{goldengate,
  author={Magyar, Albert and Biancolin, David and Koenig, John and Seshia, Sanjit and Bachrach, Jonathan and Asanović, Krste},
  booktitle={2019 IEEE/ACM International Conference on Computer-Aided Design (ICCAD)},
  title={Golden Gate: Bridging The Resource-Efficiency Gap Between ASICs and FPGA Prototypes},
  year={2019},  volume={},  number={},  pages={1-8},  doi={10.1109/ICCAD45719.2019.8942087}}

@inproceedings{gumtree,
  title={Fine-grained and accurate source code differencing},
  author={Falleri, Jean-R{\'e}my and Morandat, Flor{\'e}al and Blanc, Xavier and Martinez, Matias and Monperrus, Martin},
  booktitle={Proceedings of the 29th ACM/IEEE international conference on Automated software engineering},
  pages={313--324},
  year={2014}
}

@INPROCEEDINGS{maximum_common_subgraph_for_digital_circuits,
  author={Rutgers, Jochem H. and Wolkotte, Pascal T. and Hölzenspies, Philip K.F. and Kuper, Jan and Smit, Gerard J.M.},
  booktitle={2010 13th Euromicro Conference on Digital System Design: Architectures, Methods and Tools}, 
  title={An Approximate Maximum Common Subgraph Algorithm for Large Digital Circuits}, 
  year={2010},
  volume={},
  number={},
  pages={699-705},
  keywords={Approximation algorithms;Computer architecture;Algorithm design and analysis;Complexity theory;Niobium;Field programmable gate arrays;Microprocessors},
  doi={10.1109/DSD.2010.29}}

